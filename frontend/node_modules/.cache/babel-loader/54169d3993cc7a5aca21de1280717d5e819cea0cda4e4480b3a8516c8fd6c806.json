{"ast":null,"code":"const WS_URL = \"ws://localhost:8000/ws/vehicles\";\nexport function connect(onMessage) {\n  const socket = new WebSocket(WS_URL);\n  socket.onopen = () => console.log(\"✅ WebSocket connected\");\n  socket.onmessage = event => {\n    try {\n      const data = JSON.parse(event.data);\n      onMessage(data);\n    } catch (err) {\n      console.error(\"⚠️ Error parsing message:\", err);\n    }\n  };\n  socket.onclose = () => console.log(\"❌ WebSocket disconnected\");\n  socket.onerror = err => console.error(\"⚠️ WebSocket error:\", err);\n  return socket;\n}","map":{"version":3,"names":["WS_URL","connect","onMessage","socket","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","err","error","onclose","onerror"],"sources":["C:/Users/91810/Desktop/Ghost-Bus/frontend/src/wsClient.js"],"sourcesContent":["const WS_URL = \"ws://localhost:8000/ws/vehicles\";\r\n\r\nexport function connect(onMessage) {\r\n  const socket = new WebSocket(WS_URL);\r\n\r\n  socket.onopen = () => console.log(\"✅ WebSocket connected\");\r\n\r\n  socket.onmessage = (event) => {\r\n    try {\r\n      const data = JSON.parse(event.data);\r\n      onMessage(data);\r\n    } catch (err) {\r\n      console.error(\"⚠️ Error parsing message:\", err);\r\n    }\r\n  };\r\n\r\n  socket.onclose = () => console.log(\"❌ WebSocket disconnected\");\r\n  socket.onerror = (err) => console.error(\"⚠️ WebSocket error:\", err);\r\n\r\n  return socket;\r\n}\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAG,iCAAiC;AAEhD,OAAO,SAASC,OAAOA,CAACC,SAAS,EAAE;EACjC,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAACJ,MAAM,CAAC;EAEpCG,MAAM,CAACE,MAAM,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EAE1DJ,MAAM,CAACK,SAAS,GAAIC,KAAK,IAAK;IAC5B,IAAI;MACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC;MACnCR,SAAS,CAACQ,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;IACjD;EACF,CAAC;EAEDV,MAAM,CAACY,OAAO,GAAG,MAAMT,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAC9DJ,MAAM,CAACa,OAAO,GAAIH,GAAG,IAAKP,OAAO,CAACQ,KAAK,CAAC,qBAAqB,EAAED,GAAG,CAAC;EAEnE,OAAOV,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}